{
  "version": 3,
  "sources": ["../../use-double-click/src/index.js"],
  "sourcesContent": ["import { useEffect } from 'react';\n\n/**\n * A simple React hook for differentiating single and double clicks on the same component.\n *\n * @param {node} ref Dom node to watch for double clicks\n * @param {number} [latency=300] The amount of time (in milliseconds) to wait before differentiating a single from a double click\n * @param {function} onSingleClick A callback function for single click events\n * @param {function} onDoubleClick A callback function for double click events\n */\nconst useDoubleClick = ({\n  ref,\n  latency = 300,\n  onSingleClick = () => null,\n  onDoubleClick = () => null\n}) => {\n  useEffect(() => {\n    const clickRef = ref.current;\n    let clickCount = 0;\n    const handleClick = e => {\n      clickCount += 1;\n\n      setTimeout(() => {\n        if (clickCount === 1) onSingleClick(e);\n        else if (clickCount === 2) onDoubleClick(e);\n\n        clickCount = 0;\n      }, latency);\n    };\n\n    // Add event listener for click events\n    clickRef.addEventListener('click', handleClick);\n\n    // Remove event listener\n    return () => {\n      clickRef.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nexport default useDoubleClick;\n"],
  "mappings": ";;;;;;;;;AAUA,IAAMA,iBAAiB,SAAjBA,gBAAiB,MAKjB;MAJJC,MAII,KAJJA,yBACAC,SAAAA,UAGI,iBAAA,SAHM,MAGN,wCAFJC,eAAAA,gBAEI,uBAAA,SAFY,WAAA;WAAM;MAElB,8CADJC,eAAAA,gBACI,uBAAA,SADY,WAAA;WAAM;MAClB;AACJC,8BAAU,WAAM;QACRC,WAAWL,IAAIM;QACjBC,aAAa;QACXC,cAAc,SAAdA,aAAcC,GAAK;AACvBF,oBAAc;AAEdG,iBAAW,WAAM;YACXH,eAAe,EAAGL,eAAcO,CAAD;iBAC1BF,eAAe,EAAGJ,eAAcM,CAAD;AAExCF,qBAAa;SACZN,OALO;;AASZI,aAASM,iBAAiB,SAASH,WAAnC;WAGO,WAAM;AACXH,eAASO,oBAAoB,SAASJ,WAAtC;;GAnBK;;;",
  "names": ["useDoubleClick", "ref", "latency", "onSingleClick", "onDoubleClick", "useEffect", "clickRef", "current", "clickCount", "handleClick", "e", "setTimeout", "addEventListener", "removeEventListener"]
}
